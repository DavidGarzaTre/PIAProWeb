// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PIAProWeb.Models.dbModels;

#nullable disable

namespace PIAProWeb.Migrations
{
    [DbContext(typeof(PIAProWebContext))]
    [Migration("20221111213519_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("PIAProWeb.Models.dbModels.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("CalleNumero")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Calle_Numero");

                    b.Property<string>("Ciudad")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CodigoPostal")
                        .HasColumnType("int")
                        .HasColumnName("Codigo_Postal");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Referencias")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("PIAProWeb.Models.dbModels.Carrito", b =>
                {
                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int")
                        .HasColumnName("Id_Producto");

                    b.Property<int>("CantidadProducto")
                        .HasColumnType("int")
                        .HasColumnName("Cantidad_Producto");

                    b.HasKey("IdUsuario", "IdProducto")
                        .HasName("PK__Carrito__5B65BF975107183C");

                    b.HasIndex("IdProducto");

                    b.ToTable("Carrito");
                });

            modelBuilder.Entity("PIAProWeb.Models.dbModels.CategoriaProducto", b =>
                {
                    b.Property<int>("IdCategoria")
                        .HasColumnType("int")
                        .HasColumnName("Id_categoria");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdCategoria")
                        .HasName("PK__Categori__4A033A932CE71C3D");

                    b.HasIndex(new[] { "Nombre" }, "UQ__Categori__75E3EFCFF18DD025")
                        .IsUnique();

                    b.ToTable("Categoria_Producto");
                });

            modelBuilder.Entity("PIAProWeb.Models.dbModels.DatosTarjetum", b =>
                {
                    b.Property<int>("IdTarjeta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Tarjeta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTarjeta"), 1L, 1);

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("datetime")
                        .HasColumnName("Fecha_Vencimiento");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("Id_Usuario");

                    b.Property<string>("NombrePropietario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Nombre_Propietario");

                    b.Property<int>("NumeroSeguridad")
                        .HasColumnType("int")
                        .HasColumnName("Numero_Seguridad");

                    b.Property<int>("NumeroTarjeta")
                        .HasColumnType("int")
                        .HasColumnName("Numero_Tarjeta");

                    b.HasKey("IdTarjeta")
                        .HasName("PK__Datos_Ta__F5762032B459290D");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Datos_Tarjeta");
                });

            modelBuilder.Entity("PIAProWeb.Models.dbModels.DetalleOrden", b =>
                {
                    b.Property<int>("IdOrden")
                        .HasColumnType("int")
                        .HasColumnName("Id_Orden");

                    b.Property<int>("IdArticulo")
                        .HasColumnType("int")
                        .HasColumnName("Id_Articulo");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.HasKey("IdOrden", "IdArticulo")
                        .HasName("PK__Detalle___370733B6C49303A3");

                    b.HasIndex("IdArticulo");

                    b.ToTable("Detalle_Orden");
                });

            modelBuilder.Entity("PIAProWeb.Models.dbModels.EspecsCpu", b =>
                {
                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<string>("Arquitectura")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Disipador")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FrecuenciaDeGraficos")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Frecuencia_de_Graficos");

                    b.Property<string>("Generacion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GraficoIntegrados")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Grafico_Integrados");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nucleos")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Socket")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Tdp")
                        .HasColumnType("int")
                        .HasColumnName("TDP");

                    b.Property<string>("Velocidad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdProducto")
                        .HasName("PK__Especs_C__09889210ECD857D0");

                    b.ToTable("Especs_CPU");
                });

            modelBuilder.Entity("PIAProWeb.Models.dbModels.EspecsDiscoduro", b =>
                {
                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<string>("Capacidad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Interfaz")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TipoDisco")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Tipo_Disco");

                    b.Property<string>("Velocidad")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdProducto")
                        .HasName("PK__Especs_d__098892101F57B502");

                    b.ToTable("Especs_discoduro");
                });

            modelBuilder.Entity("PIAProWeb.Models.dbModels.EspecsFuenteAlimentacion", b =>
                {
                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<string>("Conector")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("ConectoresSata")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Conectores_SATA");

                    b.Property<string>("EntradaVoltaje")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Entrada_Voltaje");

                    b.Property<string>("MaximaPotencia")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("Maxima_Potencia");

                    b.Property<string>("Ventilador")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("IdProducto")
                        .HasName("PK__Especs_F__09889210980AD2C9");

                    b.ToTable("Especs_Fuente_Alimentacion");
                });

            modelBuilder.Entity("PIAProWeb.Models.dbModels.EspecsGrafica", b =>
                {
                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<string>("Chipset")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("CudaCores")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)")
                        .HasColumnName("CUDA_Cores");

                    b.Property<string>("DirectX")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FrecuenciaMemoria")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Frecuencia_Memoria");

                    b.Property<string>("Gpu")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)")
                        .HasColumnName("GPU");

                    b.Property<string>("Interfaz")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Memoria")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SalidasVideo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Salidas_Video");

                    b.Property<string>("TipoMemoria")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Tipo_Memoria");

                    b.HasKey("IdProducto")
                        .HasName("PK__Especs_G__098892103BF442AA");

                    b.ToTable("Especs_Graficas");
                });

            modelBuilder.Entity("PIAProWeb.Models.dbModels.EspecsPlacaMadre", b =>
                {
                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<string>("ArquitecturaMemoria")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Arquitectura_Memoria");

                    b.Property<string>("ChipsetAudio")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("Chipset_Audio");

                    b.Property<int>("Conector12v8pinInterno")
                        .HasColumnType("int")
                        .HasColumnName("Conector_12v8pin_Interno");

                    b.Property<int>("Conector24pinInterno")
                        .HasColumnType("int")
                        .HasColumnName("Conector_24pin_Interno");

                    b.Property<int>("ConectorCpufanInterno")
                        .HasColumnType("int")
                        .HasColumnName("Conector_cpufan_Interno");

                    b.Property<int>("ConectorM2Interno")
                        .HasColumnType("int")
                        .HasColumnName("Conector_M2_Interno");

                    b.Property<int>("ConectorSataInterno")
                        .HasColumnType("int")
                        .HasColumnName("Conector_Sata_Interno");

                    b.Property<int>("ConectorTpmInterno")
                        .HasColumnType("int")
                        .HasColumnName("Conector_tpm_Interno");

                    b.Property<string>("EntradasAlmacenamiento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Entradas_Almacenamiento");

                    b.Property<string>("EntradasVideo")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("ENtradas_Video");

                    b.Property<string>("EspecificacionExtra")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("Especificacion_Extra");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MarcaProceesador")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("Marca_Proceesador");

                    b.Property<string>("MaximaMemoria")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Maxima_Memoria");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ModeloChipset")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Modelo_Chipset");

                    b.Property<string>("ProcesadorCompatibles")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Procesador_Compatibles");

                    b.Property<string>("PuertoRed")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)")
                        .HasColumnName("Puerto_Red");

                    b.Property<int>("PuertosAudioTraseros")
                        .HasColumnType("int")
                        .HasColumnName("Puertos_audio_traseros");

                    b.Property<int>("PuertosDisplayPortTraseros")
                        .HasColumnType("int")
                        .HasColumnName("Puertos_DisplayPort_traseros");

                    b.Property<int>("PuertosHdmiTraseros")
                        .HasColumnType("int")
                        .HasColumnName("Puertos_HDMI_traseros");

                    b.Property<int>("PuertosRedTraseros")
                        .HasColumnType("int")
                        .HasColumnName("Puertos_red_traseros");

                    b.Property<int>("PuertosUsbTraseros")
                        .HasColumnType("int")
                        .HasColumnName("Puertos_Usb_traseros");

                    b.Property<string>("RanurasMemoria")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Ranuras_Memoria");

                    b.Property<string>("TipoMemoriaDdr")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Tipo_MemoriaDDR");

                    b.Property<string>("TipoRanuraExpansion")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("Tipo_Ranura_Expansion");

                    b.HasKey("IdProducto")
                        .HasName("PK__Especs_P__098892101E962375");

                    b.ToTable("Especs_PlacaMadre");
                });

            modelBuilder.Entity("PIAProWeb.Models.dbModels.EspecsRam", b =>
                {
                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<string>("Capacidad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Latencia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Tecnologia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Velocidad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VoltajeAlimentacion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Voltaje_Alimentacion");

                    b.HasKey("IdProducto")
                        .HasName("PK__Especs_r__09889210C637BAF8");

                    b.ToTable("Especs_ram");
                });

            modelBuilder.Entity("PIAProWeb.Models.dbModels.Orden", b =>
                {
                    b.Property<int>("IdOrden")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Orden");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOrden"), 1L, 1);

                    b.Property<DateTime>("FechaOrden")
                        .HasColumnType("datetime")
                        .HasColumnName("Fecha_Orden");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("Id_Usuario");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(11,2)");

                    b.HasKey("IdOrden")
                        .HasName("PK__Orden__370733B6E70FCB69");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Orden");
                });

            modelBuilder.Entity("PIAProWeb.Models.dbModels.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Producto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProducto"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int")
                        .HasColumnName("Id_Categoria");

                    b.Property<string>("ImagenProducto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Imagen_Producto");

                    b.Property<string>("NombreProducto")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("Nombre_Producto");

                    b.Property<decimal>("PrecioProducto")
                        .HasColumnType("decimal(11,2)")
                        .HasColumnName("Precio_Producto");

                    b.Property<string>("StockProducto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Stock_Producto");

                    b.HasKey("IdProducto")
                        .HasName("PK__Producto__2085A9CF821D5EDD");

                    b.HasIndex("IdCategoria");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("PIAProWeb.Models.dbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("PIAProWeb.Models.dbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PIAProWeb.Models.dbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("PIAProWeb.Models.dbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PIAProWeb.Models.dbModels.Carrito", b =>
                {
                    b.HasOne("PIAProWeb.Models.dbModels.Producto", "IdProductoNavigation")
                        .WithMany("Carritos")
                        .HasForeignKey("IdProducto")
                        .IsRequired()
                        .HasConstraintName("FK_Carrito_Producto1");

                    b.HasOne("PIAProWeb.Models.dbModels.ApplicationUser", "IdUsuarioNavigation")
                        .WithMany("Carritos")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Carrito_Usuarios");

                    b.Navigation("IdProductoNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("PIAProWeb.Models.dbModels.DatosTarjetum", b =>
                {
                    b.HasOne("PIAProWeb.Models.dbModels.ApplicationUser", "IdUsuarioNavigation")
                        .WithMany("DatosTarjeta")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Datos_Tarjeta_Usuarios");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("PIAProWeb.Models.dbModels.DetalleOrden", b =>
                {
                    b.HasOne("PIAProWeb.Models.dbModels.Producto", "IdArticuloNavigation")
                        .WithMany("DetalleOrdens")
                        .HasForeignKey("IdArticulo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Detalle_Orden_Producto");

                    b.HasOne("PIAProWeb.Models.dbModels.Orden", "IdOrdenNavigation")
                        .WithMany("DetalleOrdens")
                        .HasForeignKey("IdOrden")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Detalle_Orden_Orden");

                    b.Navigation("IdArticuloNavigation");

                    b.Navigation("IdOrdenNavigation");
                });

            modelBuilder.Entity("PIAProWeb.Models.dbModels.EspecsCpu", b =>
                {
                    b.HasOne("PIAProWeb.Models.dbModels.Producto", "IdProductoNavigation")
                        .WithOne("EspecsCpu")
                        .HasForeignKey("PIAProWeb.Models.dbModels.EspecsCpu", "IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Especs_CPU_Producto");

                    b.Navigation("IdProductoNavigation");
                });

            modelBuilder.Entity("PIAProWeb.Models.dbModels.EspecsDiscoduro", b =>
                {
                    b.HasOne("PIAProWeb.Models.dbModels.Producto", "IdProductoNavigation")
                        .WithOne("EspecsDiscoduro")
                        .HasForeignKey("PIAProWeb.Models.dbModels.EspecsDiscoduro", "IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Especs_discoduro_Producto");

                    b.Navigation("IdProductoNavigation");
                });

            modelBuilder.Entity("PIAProWeb.Models.dbModels.EspecsFuenteAlimentacion", b =>
                {
                    b.HasOne("PIAProWeb.Models.dbModels.Producto", "IdProductoNavigation")
                        .WithOne("EspecsFuenteAlimentacion")
                        .HasForeignKey("PIAProWeb.Models.dbModels.EspecsFuenteAlimentacion", "IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Especs_Fuente_Alimentacion_Producto");

                    b.Navigation("IdProductoNavigation");
                });

            modelBuilder.Entity("PIAProWeb.Models.dbModels.EspecsGrafica", b =>
                {
                    b.HasOne("PIAProWeb.Models.dbModels.Producto", "IdProductoNavigation")
                        .WithOne("EspecsGrafica")
                        .HasForeignKey("PIAProWeb.Models.dbModels.EspecsGrafica", "IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Especs_Graficas_Producto");

                    b.Navigation("IdProductoNavigation");
                });

            modelBuilder.Entity("PIAProWeb.Models.dbModels.EspecsPlacaMadre", b =>
                {
                    b.HasOne("PIAProWeb.Models.dbModels.Producto", "IdProductoNavigation")
                        .WithOne("EspecsPlacaMadre")
                        .HasForeignKey("PIAProWeb.Models.dbModels.EspecsPlacaMadre", "IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Especs_PlacaMadre_Producto");

                    b.Navigation("IdProductoNavigation");
                });

            modelBuilder.Entity("PIAProWeb.Models.dbModels.EspecsRam", b =>
                {
                    b.HasOne("PIAProWeb.Models.dbModels.Producto", "IdProductoNavigation")
                        .WithOne("EspecsRam")
                        .HasForeignKey("PIAProWeb.Models.dbModels.EspecsRam", "IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Especs_ram_Producto");

                    b.Navigation("IdProductoNavigation");
                });

            modelBuilder.Entity("PIAProWeb.Models.dbModels.Orden", b =>
                {
                    b.HasOne("PIAProWeb.Models.dbModels.ApplicationUser", "IdUsuarioNavigation")
                        .WithMany("Ordens")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Orden_Usuarios");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("PIAProWeb.Models.dbModels.Producto", b =>
                {
                    b.HasOne("PIAProWeb.Models.dbModels.CategoriaProducto", "IdCategoriaNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Producto_Categoria_Producto");

                    b.Navigation("IdCategoriaNavigation");
                });

            modelBuilder.Entity("PIAProWeb.Models.dbModels.ApplicationUser", b =>
                {
                    b.Navigation("Carritos");

                    b.Navigation("DatosTarjeta");

                    b.Navigation("Ordens");
                });

            modelBuilder.Entity("PIAProWeb.Models.dbModels.CategoriaProducto", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("PIAProWeb.Models.dbModels.Orden", b =>
                {
                    b.Navigation("DetalleOrdens");
                });

            modelBuilder.Entity("PIAProWeb.Models.dbModels.Producto", b =>
                {
                    b.Navigation("Carritos");

                    b.Navigation("DetalleOrdens");

                    b.Navigation("EspecsCpu");

                    b.Navigation("EspecsDiscoduro");

                    b.Navigation("EspecsFuenteAlimentacion");

                    b.Navigation("EspecsGrafica");

                    b.Navigation("EspecsPlacaMadre");

                    b.Navigation("EspecsRam");
                });
#pragma warning restore 612, 618
        }
    }
}
